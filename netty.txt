BIO：同步阻塞io，NIO：同步非阻塞io，AIO：异步非阻塞io
①：netty是一个基于nio（同步非阻塞io）的网络通信框架
②：它极大简化了网络编程，使用netty可以快速简单的开发网络应用程序，并且它在安全性方面有保障
③：支持多种协议：FTP,SMTP,HTTP
总结：neety是高性能，安全，灵活且稳定的网络通信工具

netty线程模型：大部分网络框架使用Reactor模式来设计的（ Reactor模式基于事件驱动，采用多路复用将事件分发给相应的Handler处理）
	         Netty 主要靠 NioEventLoopGroup 线程池来实现具体的线程模型的 。

netty的零拷贝：避免在用户态和内核态来回拷贝数据，提高数据读取的效率和性能
拿读操作举例，用户向程序发起一次读请求，会调用read相关的系统函数，就需要从用户态切换到内核态，随后CPU会告诉DMA去磁盘将数据拷贝到内核缓冲区，等待内核缓冲区真正有数据后，CPU会将内核缓冲区
的数据拷贝回用户缓冲区，最终用户获取到数据。
所谓的零拷贝就是：用一些零拷贝技术来代替掉CPU将内核缓冲区数据拷贝到用户缓冲区这步操作，以此提高数据读取的性能和效率
		（因为用户态和内核态之间的切换是很消耗资源的，我们可以采用零拷贝技术来替换掉这个操作）
常见的零拷贝技术：mmap（内核缓冲区和用户缓冲区共享技术，这样就可以减少用户态和内核态的切换了，无需最后将数据从内核缓冲区拷贝到用户缓冲区）
	              sendfile（系统底层函数支持，这样就可以避免用户态切换到内核态来调用read系统函数了，在用户态也可以直接调用）
		
	        